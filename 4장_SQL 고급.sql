/* 
SQL 고급
*/



CREATE TABLE MEMBER(
UID VARCHAR(10) PRIMARY KEY,
NAME VARCHAR(10) NOT NULL,
HP VARCHAR(13) UNIQUE,
POS VARCHAR(10) DEFAULT '사원',
DEP INT,
RDATE DATETIME NOT NULL
);

DROP TABLE MEMBER;

CREATE TABLE DEPARTMENT(
DEPNO INT PRIMARY KEY,
NAME VARCHAR(10) NOT NULL,
TEL VARCHAR(12) NOT NULL
);

CREATE TABLE SALES(
SEQ INT PRIMARY KEY auto_increment,
UID VARCHAR(10) NOT NULL,
YEAR YEAR NOT NULL,
MONTH INT NOT NULL,
SALE INT
);

INSERT INTO MEMBER VALUES('A101','박혁거세','010-1234-1001','부장',101,'2020-11-19 11:39:48');
INSERT INTO MEMBER VALUES('A102','김유신','010-1234-1002','차장',101,'2020-11-19 11:39:48');
INSERT INTO MEMBER VALUES('A103','김춘추','010-1234-1003','사원',101,'2020-11-19 11:39:48');
INSERT INTO MEMBER VALUES('A104','장보고','010-1234-1004','대리',102,'2020-11-19 11:39:48');
INSERT INTO MEMBER VALUES('A105','강감찬','010-1234-1005','과장',102,'2020-11-19 11:39:48');
INSERT INTO MEMBER VALUES('A106','이성계','010-1234-1006','차장',103,'2020-11-19 11:39:48');
INSERT INTO MEMBER VALUES('A107','정철','010-1234-1007','차장',103,'2020-11-19 11:39:48');
INSERT INTO MEMBER VALUES('A108','이순신','010-1234-1008','부장',104,'2020-11-19 11:39:48');
INSERT INTO MEMBER VALUES('A109','허균','010-1234-1009','부장',104,'2020-11-19 11:39:48');
INSERT INTO MEMBER VALUES('A110','정약용','010-1234-1010','사원',105,'2020-11-19 11:39:48');
INSERT INTO MEMBER VALUES('A111','박지원','010-1234-1011','사원',105,'2020-11-19 11:39:48');
SELECT * FROM MEMBER;


INSERT INTO DEPARTMENT VALUES(101,'영업1부','051-512-1001');
INSERT INTO DEPARTMENT VALUES(102,'영업2부','051-512-1002');
INSERT INTO DEPARTMENT VALUES(103,'영업3부','051-512-1003');
INSERT INTO DEPARTMENT VALUES(104,'영업4부','051-512-1004');
INSERT INTO DEPARTMENT VALUES(105,'영업5부','051-512-1005');
INSERT INTO DEPARTMENT VALUES(106,'영업지원부','051-512-1006');
INSERT INTO DEPARTMENT VALUES(107,'인사부','051-512-1007');

SELECT * FROM DEPARTMENT;
SELECT * FROM SALES;
DROP TABLE SALES;

INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A101',2018,1,98100);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A102',2018,1,136000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A103',2018,1,80100);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A104',2018,1,78000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A105',2018,1,93000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A101',2018,2,23500);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A102',2018,2,126000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A103',2018,2,18500);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A105',2018,2,19000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A106',2018,2,53000);

SELECT * FROM SALES;
DELETE FROM SALES WHERE UID='A102';


INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A101',2019,1,24000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A102',2019,1,109000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A103',2019,1,101000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A104',2019,1,53500);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A107',2019,1,24000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A102',2019,2,160000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A103',2019,2,101000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A104',2019,2,43000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A105',2019,2,24000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A106',2019,2,109000);

SELECT * FROM SALES;

INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A102',2020,1,201000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A104',2020,1,63000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A105',2020,1,74000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A106',2020,1,122000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A107',2020,1,111000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A102',2020,2,120000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A103',2020,2,93000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A104',2020,2,84000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A105',2020,2,180000);
INSERT INTO SALES(UID,YEAR,MONTH,SALE) VALUES('A108',2020,2,76000);



SELECT * FROM SALES;





-- 4-3

SELECT * FROM MEMBER WHERE NAME = '김유신';
SELECT * FROM MEMBER WHERE POS ='차장' AND DEP=101;
SELECT * FROM MEMBER WHERE POS ='차장' OR DEP=101;
SELECT * FROM MEMBER WHERE NAME  !='김춘추';
SELECT * FROM MEMBER WHERE NAME <> '김춘추';
SELECT * FROM MEMBER WHERE DEP IN (101,102,103);
SELECT * FROM MEMBER WHERE NAME LIKE '%신';



-- 4-4
SELECT * FROM SALES ORDER BY SALE;
SELECT * FROM SALES ORDER BY SALE ASC;
SELECT * FROM SALES ORDER BY SALE DESC;

SELECT * FROM MEMBER ORDER BY NAME;
SELECT * FROM MEMBER ORDER BY NAME DESC;
SELECT * FROM MEMBER ORDER BY NAME ASC;

SELECT * FROM SALES WHERE SALE>50000
ORDER BY YEAR, MONTH, SALE DESC;
 
 
 
 -- 4-5
 SELECT * FROM SALES LIMIT 3;
 SELECT * FROM SALES LIMIT 0,3;
 SELECT * FROM SALES LIMIT 5,3;
 SELECT * FROM SALES ORDER BY SALE DESC LIMIT 3,5;
 SELECT * FROM SALES WHERE SALE<50000 ORDER BY SALE DESC LIMIT 3;
 SELECT * FROM SALES
 WHERE SALE > 50000
 ORDER BY YEAR DESC, MONTH, SALE DESC
 LIMIT 5;
 
 
 -- 4-6
 SELECT SUM(SALE) AS 합계 FROM SALES;
 SELECT AVG(SALE) AS 평균 FROM SALES;
 SELECT max(SALE) AS 최대값 FROM SALES;
 SELECT MIN(SALE) AS 최소값 from SALES;

SELECT CEILING(1.2);
SELECT CEILING(1.8);
SELECT FLOOR(1.2);
SELECT ROUND(1.2);

SELECT COUNT(SALE) AS 갯수 FROM SALES;
SELECT COUNT(*) AS 갯수 FROM SALES;

SELECT LEFT('HELLOWORLD',5);
SELECT SUBSTRING('HELLOWORLD',6,5);
SELECT CONCAT('HELLO','WORLD');

SELECT CURDATE();
SELECT CURTIME();
SELECT NOW();
INSERT MEMBER VALUES('A112','유관순','010-1234-1012','대리',107,NOW());
SELECT * FROM MEMBER;


-- 4-7
SELECT SUM(SALE) FROM SALES WHERE YEAR=2018 AND MONTH=1;

-- 4-8
SELECT AVG(SALE) AS 평균, SUM(SALE) AS 합계 FROM SALES WHERE YEAR=2019 AND MONTH=2 AND SALE>=50000;

-- 4-9
SELECT MIN(SALE) AS 최저, MAX(SALE) AS 최고 FROM SALES WHERE YEAR=2020;



-- 4-10
SELECT * FROM SALES;

SELECT * FROM SALES GROUP BY UID;
SELECT UID, COUNT(*) 건수 FROM SALES GROUP BY UID;


-- 4-11
SELECT UID, YEAR, SUM(SALE) AS 합계 FROM SALES
WHERE SALE>=100000
GROUP BY UID,YEAR
HAVING 합계 >=200000
ORDER BY 합계 DESC;


-- 4-12
CREATE TABLE SALES2 LIKE SALES;
INSERT INTO SALES2 SELECT * FROM SALES;
UPDATE SALES2 SET YEAR = YEAR+3;
SELECT * FROM SALES UNION SELECT * FROM SALES2;

SELECT * FROM SALES WHERE SALE>=100000
UNION
SELECT * FROM SALES2 WHERE SALE >=100000;

SELECT UID,YEAR,SALE FROM SALES
UNION
SELECT UID,YEAR,SALE FROM SALES2;

SELECT UID,YEAR,SUM(SALE) AS 합계
FROM SALES
GROUP BY UID,YEAR
UNION
SELECT UID,YEAR,SUM(SALE) AS 합계
FROM SALES2
GROUP BY UID,YEAR
ORDER BY YEAR ASC, 합계 DESC;


-- 4-13
SELECT * FROM SALES INNER JOIN MEMBER ON SALES.UID=MEMBER.UID;
SELECT * FROM MEMBER INNER JOIN DEPARTMENT ON MEMBER.DEP = DEPARTMENT.DEPNO;

SELECT * FROM SALES AS A JOIN MEMBER AS B ON A.UID = B.UID;
SELECT * FROM MEMBER AS A JOIN DEPARTMENT AS B ON A.DEP = B.DEPNO;

SELECT * FROM SALES AS A, MEMBER AS B WHERE A.UID = B.UID;
SELECT * FROM MEMBER AS A , DEPARTMENT AS B WHERE A.DEP = B.DEPNO;

SELECT A.SEQ, A.UID, SALE, NAME, POS FROM SALES AS A 
JOIN MEMBER AS B  ON A.UID = B.UID;

SELECT A.SEQ, A.UID, B.NAME, B.POS, YEAR, SUM(SALE) AS 합계 FROM SALES AS A 
JOIN MEMBER AS B ON A.UID = B.UID
GROUP BY A.UID 
HAVING 합계 >= 100000
ORDER BY A.YEAR ASC, 합계 DESC;


SELECT * FROM SALES AS A
JOIN MEMBER AS B ON A.UID = B.UID
JOIN DEPARTMENT AS C ON B.DEP = C.DEPNO;

SELECT A.SEQ, A.UID, A.SALE, B.NAME, B.POS, C.NAME FROM SALES AS A
JOIN MEMBER AS B ON A.UID = B.UID
JOIN DEPARTMENT AS C ON B.DEP = C.DEPNO;



-- 4-14
SELECT * FROM SALES AS A LEFT JOIN MEMBER AS B ON A.UID = B.UID;
 
SELECT * FROM SALES AS A RIGHT JOIN MEMBER AS B ON A.UID = B.UID;

SELECT A.SEQ, A.UID, SALE, NAME, POS FROM SALES AS A
LEFT JOIN MEMBER AS B USING(UID);


SELECT A.SEQ, A.UID, SALE, NAME, POS FROM SALES AS A
RIGHT JOIN MEMBER AS B USING(UID);

-- 4-15
SELECT A.UID, A.NAME, A.POS, B.NAME FROM MEMBER AS A
JOIN DEPARTMENT AS B ON A.DEP = B.DEPNO;


-- 4-16
SELECT SUM(A.SALE) FROM SALES AS A
JOIN MEMBER AS B ON A.UID = B.UID
WHERE A.YEAR = 2019 AND B.NAME='김유신';


-- 4-17
SELECT A.NAME, C.NAME, A.POS, B.YEAR, SUM(B.SALE)
FROM MEMBER AS A
JOIN SALES AS B ON A.UID = B.UID
JOIN DEPARTMENT AS C ON A.DEP = C.DEPNO
WHERE B.YEAR = 2019 AND B.SALE >=50000
GROUP BY A.NAME,C.NAME,A.POS,B.YEAR
HAVING SUM(B.SALE)>=100000
ORDER BY SUM(B.SALE) DESC;



































